export EDITOR="vim"
export MANPATH="/usr/local/man:$MANPATH"

# Ensure /usr/local/bin takes precedence over /usr/bin and /bin
export PATH="/usr/local/bin:/usr/local/sbin:$PATH"

# Setup for rbenv
if [[ -d "$HOME/.rbenv/bin" ]] ; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi

export PATH="$HOME/bin:$HOME/.bin:$PATH"
unset MANPATH
export MANPATH=$HOME/man:$HOME/.man:$(manpath)

# Powerline location
export POWERLINE_LOCATION=`pip show powerline-status | grep "^Location" | awk '{ print $2 }'`

# Set up for z.sh
[[ -f ~/.bin/z.sh ]] && . ~/.bin/z.sh

ZSH=$HOME/.oh-my-zsh
ZSH_THEME="steeef"

fpath=(~/.zsh/functions $fpath)
autoload -U ~/.zsh/functions/*(:t)

HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000
REPORTTIME=10 # print elapsed time when more than 10 seconds

setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt HIST_VERIFY
setopt SHARE_HISTORY # share history between sessions ???
setopt EXTENDED_HISTORY # add timestamps to history
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF
setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS

zle -N newtab

bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^[[5D' beginning-of-line
bindkey '^[[5C' end-of-line
bindkey '^[[3~' delete-char
bindkey '^[^N' newtab
bindkey '^?' backward-delete-char

plugins=(git gnu-utils aws virtualenvwrapper docker)
source $ZSH/oh-my-zsh.sh

eval `dircolors ~/.dir_colors`

# Custom PROMPT including phpbrew information
function phpbrew_info {
    [ $PHPBREW_PHP ] && echo '('$fg[blue]`basename $PHPBREW_PHP`%{$reset_color%}') '
}

# Custom PROMPT including ruby information
function ruby_info {
    if which rbenv &> /dev/null; then
        ruby_version=`rbenv version | sed -e "s/ (set.*$//"`
        if [ "${ruby_version}" != "system" ]; then
            ruby_version="ruby-${ruby_version}"
            echo '('$fg[blue]${ruby_version}%{$reset_color%}') '
        fi
    fi
}

PROMPT=$'
%{$purple%}%n%{$reset_color%} at %{$orange%}%m%{$reset_color%} in %{$limegreen%}%~%{$reset_color%} $vcs_info_msg_0_$(virtualenv_info)$(phpbrew_info)$(ruby_info)%{$reset_color%}
$ '
